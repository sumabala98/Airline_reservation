<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/EngineTypes" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.tibco.com/schemas/Airline Reservation System/Schemas/Common_Logging/Schema.xsd" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:CustomFuction="java://java_uuidcode.java_uuidcode" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx3="http://www.tibco.com/schemas/Airline Reservation System/Schemas/Common_Logging/Schema.xsd3" xmlns:pfx2="http://www.tibco.com/schemas/Airline Reservation System/Schemas/Schema.xsd3" xmlns:ns12="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:pfx="http://www.tibco.com/schemas/Airline Reservation System/Schemas/User_Registration/Schema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.tibco.com/schemas/Airline Reservation System/Schemas/User_Registration/Schema.xsd" schemaLocation="/Schemas/User_Registration/User_Registration.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/Airline Reservation System/Schemas/Schema.xsd3" schemaLocation="/Schemas/Payload.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/Airline Reservation System/Schemas/Common_Logging/Schema.xsd3" schemaLocation="/Schemas/Common_Logging/Exception.xsd"/>
    <pd:name>User_Registration_Module/User_Profile/Update_Account.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx2:root"/>
    <pd:startX>44</pd:startX>
    <pd:startY>88</pd:startY>
    <pd:returnCoercions>
        <pd:coercion xpath="$_error/ns2:ErrorReport/Data/*" type="pfx3:RootType"/>
    </pd:returnCoercions>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="contains($_error/ns2:ErrorReport/Data/*/pfx3:Message_Code,'100') or&#xA;contains($_error/ns2:ErrorReport/Data/*/pfx3:Message_Code,'101') or&#xA;contains($_error/ns2:ErrorReport/Data/*/pfx3:Message_Code,'102') or&#xA;contains($_error/ns2:ErrorReport/Data/*/pfx3:Message_Code,'103') or&#xA;contains($_error/ns2:ErrorReport/Data/*/pfx3:Message_Code,'104') or &#xA;contains($_error/ns2:ErrorReport/Data/*/pfx3:Message_Code,'105') or &#xA;contains($_error/ns2:ErrorReport/Data/*/pfx3:Message_Code,'106') or&#xA;contains($_error/ns2:ErrorReport/Data/*/pfx3:Message_Code,'107') or&#xA;contains($_error/ns2:ErrorReport/Data/*/pfx3:Message_Code,'108')">
                <pfx3:Root>
                    <xsl:if test="$_error/ns2:ErrorReport/Data/*/pfx3:Message">
                        <pfx3:Message>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Data/*/pfx3:Message"/>
                        </pfx3:Message>
                    </xsl:if>
                    <xsl:if test="$_error/ns2:ErrorReport/Data/*/pfx3:Message_Code">
                        <pfx3:Message_Code>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Data/*/pfx3:Message_Code"/>
                        </pfx3:Message_Code>
                    </xsl:if>
                </pfx3:Root>
            </xsl:when>
            <xsl:when test="exists($_error/ns2:ErrorReport)">
                <pfx3:Root>
                    <xsl:if test="$_error/ns2:ErrorReport/Msg">
                        <pfx3:Message>
                            <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                        </pfx3:Message>
                    </xsl:if>
                    <xsl:if test="$_error/ns2:ErrorReport/MsgCode">
                        <pfx3:Message_Code>
                            <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                        </pfx3:Message_Code>
                    </xsl:if>
                    <xsl:if test="$_error/ns2:ErrorReport/StackTrace">
                        <pfx3:Stacktrace>
                            <xsl:value-of select="$_error/ns2:ErrorReport/StackTrace"/>
                        </pfx3:Stacktrace>
                    </xsl:if>
                </pfx3:Root>
            </xsl:when>
            <xsl:otherwise>
                <pfx3:Root>
                    <pfx3:Message>
                        <xsl:value-of select="concat('Profile Updated Sucessful with following Emai_ID' , ',' ,$Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Email )"/>
                    </pfx3:Message>
                    <pfx3:Message_Code>
                        <xsl:value-of select="&quot;200&quot;"/>
                    </pfx3:Message_Code>
                </pfx3:Root>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx3:Root"/>
    <pd:endX>834</pd:endX>
    <pd:endY>88</pd:endY>
    <pd:errorSchemas>
        <Schema ref="pfx3:Root"/>
    </pd:errorSchemas>
    <pd:processVariables>
        <Variable>
            <xsd:element name="root" type="xsd:string"/>
        </Variable>
    </pd:processVariables>
    <pd:targetNamespace>http://xmlns.example.com/1680495747353</pd:targetNamespace>
    <pd:activity name="Assign">
        <pd:type>com.tibco.pe.core.AssignActivity</pd:type>
        <pd:resourceType>ae.activities.assignActivity</pd:resourceType>
        <pd:x>137</pd:x>
        <pd:y>88</pd:y>
        <config>
            <variableName>Variable</variableName>
        </config>
        <pd:inputBindings>
            <root>
                <xsl:value-of xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="CustomFuction:getUUID()"/>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>695</pd:x>
        <pd:y>203</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="EndLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>654</pd:x>
        <pd:y>88</pd:y>
        <config>
            <processName>/Common_Module/CommonLog.process</processName>
        </config>
        <pd:inputBindings>
            <ns1:LogDetails>
                <ns1:LogHeaders>
                    <ns1:Correlation_Id>
                        <xsl:value-of select="$Variable/root"/>
                    </ns1:Correlation_Id>
                    <ns1:Application_Name>
                        <xsl:value-of select="'User_Regisration_Module'"/>
                    </ns1:Application_Name>
                    <ns1:Process_Name>
                        <xsl:value-of select="'Update_Profile'"/>
                    </ns1:Process_Name>
                    <ns1:Activity_Name>
                        <xsl:value-of select="'ParseJson'"/>
                    </ns1:Activity_Name>
                    <ns1:LogType>
                        <xsl:value-of select="'END'"/>
                    </ns1:LogType>
                    <ns1:Message_Type>
                        <xsl:value-of select="'ResponseLog'"/>
                    </ns1:Message_Type>
                    <ns1:Status>
                        <xsl:value-of select="'End'"/>
                    </ns1:Status>
                    <ns1:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns1:Timestamp>
                    <ns1:Payload>
                        <xsl:value-of select="$Update_UserProfile/jdbcUpdateActivityOutput/noOfUpdates"/>
                    </ns1:Payload>
                </ns1:LogHeaders>
            </ns1:LogDetails>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>831</pd:x>
        <pd:y>203</pd:y>
        <config>
            <processName>/Common_Module/CommonLog.process</processName>
        </config>
        <pd:inputBindings>
            <ns1:LogDetails>
                <ns1:LogHeaders>
                    <ns1:Correlation_Id>
                        <xsl:value-of select="$Variable/root"/>
                    </ns1:Correlation_Id>
                    <ns1:Application_Name>
                        <xsl:value-of select="'User_Registration'"/>
                    </ns1:Application_Name>
                    <ns1:Process_Name>
                        <xsl:value-of select="'Update_Account'"/>
                    </ns1:Process_Name>
                    <ns1:Activity_Name>
                        <xsl:value-of select="'catch All'"/>
                    </ns1:Activity_Name>
                    <ns1:LogType>
                        <xsl:value-of select="'Error'"/>
                    </ns1:LogType>
                    <ns1:Message_Type>
                        <xsl:value-of select="'Error Message'"/>
                    </ns1:Message_Type>
                    <ns1:Status>
                        <xsl:value-of select="'Error'"/>
                    </ns1:Status>
                    <ns1:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns1:Timestamp>
                </ns1:LogHeaders>
                <ns1:ErrorDetails>
                    <ns1:ErrorCode>
                        <xsl:value-of select="$_error/ns2:ErrorReport/MsgCode"/>
                    </ns1:ErrorCode>
                    <ns1:Error_Message>
                        <xsl:value-of select="$_error/ns2:ErrorReport/Msg"/>
                    </ns1:Error_Message>
                </ns1:ErrorDetails>
            </ns1:LogDetails>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>356</pd:x>
        <pd:y>88</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ValidateOutputEnable>true</ValidateOutputEnable>
            <ActivityOutputEditor ref="pfx:User_Registration"/>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Start/pfx2:root/pfx2:Payload"/>
                </jsonString>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="StartLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>247</pd:x>
        <pd:y>88</pd:y>
        <config>
            <processName>/Common_Module/CommonLog.process</processName>
        </config>
        <pd:inputBindings>
            <ns1:LogDetails>
                <ns1:LogHeaders>
                    <ns1:Correlation_Id>
                        <xsl:value-of select="$Variable/root"/>
                    </ns1:Correlation_Id>
                    <ns1:Application_Name>
                        <xsl:value-of select="'User_Regisration_Module'"/>
                    </ns1:Application_Name>
                    <ns1:Process_Name>
                        <xsl:value-of select="'Update_Account'"/>
                    </ns1:Process_Name>
                    <ns1:Activity_Name>
                        <xsl:value-of select="'ParseJson'"/>
                    </ns1:Activity_Name>
                    <ns1:LogType>
                        <xsl:value-of select="'START'"/>
                    </ns1:LogType>
                    <ns1:Message_Type>
                        <xsl:value-of select="'RequestLog'"/>
                    </ns1:Message_Type>
                    <ns1:Status>
                        <xsl:value-of select="'Start'"/>
                    </ns1:Status>
                    <ns1:Timestamp>
                        <xsl:value-of select="current-dateTime()"/>
                    </ns1:Timestamp>
                    <ns1:Payload>
                        <xsl:value-of select="$Start/pfx2:root/pfx2:Payload"/>
                    </ns1:Payload>
                </ns1:LogHeaders>
            </ns1:LogDetails>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Update_UserProfile">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>512</pd:x>
        <pd:y>88</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>UPDATE AIRLINE_USER_REGISTRATION
SET FIRSTNAME=?,LASTNAME=?,EMAIL=?,PHONENO=?,STATE=?,COUNTRY=?,PINCODE=?
WHERE EMAIL=?</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>Firstname</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Lastname</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Email</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Phoneno</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>State</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Country</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Pincode</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>Email</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <jdbcSharedConfig>/Connections/Login/JDBC Connection.sharedjdbc</jdbcSharedConfig>
        </config>
        <pd:inputBindings>
            <xsl:for-each select="$Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration">
                <jdbcUpdateActivityInput>
                    <Firstname>
                        <xsl:value-of select="pfx:Firstname"/>
                    </Firstname>
                    <Lastname>
                        <xsl:value-of select="pfx:Lastname"/>
                    </Lastname>
                    <Email>
                        <xsl:value-of select="pfx:Email"/>
                    </Email>
                    <Phoneno>
                        <xsl:choose>
                            <xsl:when test="exists(pfx:Phone_no)">
                                <xsl:value-of select="pfx:Phone_no"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </Phoneno>
                    <State>
                        <xsl:value-of select="pfx:State"/>
                    </State>
                    <Country>
                        <xsl:value-of select="pfx:Country"/>
                    </Country>
                    <Pincode>
                        <xsl:value-of select="pfx:Pincode"/>
                    </Pincode>
                    <Email>
                        <xsl:value-of select="pfx:Email"/>
                    </Email>
                </jdbcUpdateActivityInput>
            </xsl:for-each>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Generate-Error">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>360</pd:x>
        <pd:y>208</pd:y>
        <config>
            <faultName>Schema</faultName>
        </config>
        <pd:inputBindings>
            <ns12:ActivityInput>
                <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                    <xsl:when test="not(CustomFuction:matchRegex($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Firstname,'^[a-zA-Z\s]{1,100}$'))">
                        <data>
                            <pfx3:Root>
                                <pfx3:Message>
                                    <xsl:value-of select="'Invalid Firstname'"/>
                                </pfx3:Message>
                                <pfx3:Message_Code>
                                    <xsl:value-of select="'100'"/>
                                </pfx3:Message_Code>
                            </pfx3:Root>
                        </data>
                    </xsl:when>
                    <xsl:when test="string-length($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Firstname)=0">
                        <data>
                            <pfx3:Root>
                                <pfx3:Message>
                                    <xsl:value-of select="'Firstname should not be empty'"/>
                                </pfx3:Message>
                                <pfx3:Message_Code>
                                    <xsl:value-of select="'101'"/>
                                </pfx3:Message_Code>
                            </pfx3:Root>
                        </data>
                    </xsl:when>
                    <xsl:when test="not(CustomFuction:matchRegex($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Lastname,'^[a-zA-Z\s]{1,100}$'))">
                        <data>
                            <pfx3:Root>
                                <pfx3:Message>
                                    <xsl:value-of select="'Invalid lastname'"/>
                                </pfx3:Message>
                                <pfx3:Message_Code>
                                    <xsl:value-of select="'102'"/>
                                </pfx3:Message_Code>
                            </pfx3:Root>
                        </data>
                    </xsl:when>
                    <xsl:when test="string-length($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Lastname)=0">
                        <data>
                            <pfx3:Root>
                                <pfx3:Message>
                                    <xsl:value-of select="'Lastname should not be empty'"/>
                                </pfx3:Message>
                                <pfx3:Message_Code>
                                    <xsl:value-of select="'103'"/>
                                </pfx3:Message_Code>
                            </pfx3:Root>
                        </data>
                    </xsl:when>
                    <xsl:when test="not(CustomFuction:matchRegex($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Email,'^[a-z0-9]+@[a-z]+\.[a-z]{2,3}$'))">
                        <data>
                            <pfx3:Root>
                                <pfx3:Message>
                                    <xsl:value-of select="'Invalid Email_Id'"/>
                                </pfx3:Message>
                                <pfx3:Message_Code>
                                    <xsl:value-of select="'104'"/>
                                </pfx3:Message_Code>
                            </pfx3:Root>
                        </data>
                    </xsl:when>
                    <xsl:when test="not(CustomFuction:matchRegex($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Phone_no,'^[0-9]{10}$'))">
                        <data>
                            <pfx3:Root>
                                <pfx3:Message>
                                    <xsl:value-of select="'Invalid Phone number'"/>
                                </pfx3:Message>
                                <pfx3:Message_Code>
                                    <xsl:value-of select="'104'"/>
                                </pfx3:Message_Code>
                            </pfx3:Root>
                        </data>
                    </xsl:when>
                    <xsl:when test="string-length($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Email)=0">
                        <data>
                            <pfx3:Root>
                                <pfx3:Message>
                                    <xsl:value-of select="' Email_Id should not be empty'"/>
                                </pfx3:Message>
                                <pfx3:Message_Code>
                                    <xsl:value-of select="'105'"/>
                                </pfx3:Message_Code>
                            </pfx3:Root>
                        </data>
                    </xsl:when>
                    <xsl:when test="1=2">
                        <data>
                            <pfx3:Root>
                                <pfx3:Message>
                                    <xsl:value-of select="'Invalid Username'"/>
                                </pfx3:Message>
                                <pfx3:Message_Code>
                                    <xsl:value-of select="'106'"/>
                                </pfx3:Message_Code>
                            </pfx3:Root>
                        </data>
                    </xsl:when>
                    <xsl:when test="not(CustomFuction:matchRegex($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Password,'[A-Za-z0-9]{4,10}'))">
                        <data>
                            <pfx3:Root>
                                <pfx3:Message>
                                    <xsl:value-of select="'Invalid password'"/>
                                </pfx3:Message>
                                <pfx3:Message_Code>
                                    <xsl:value-of select="'107'"/>
                                </pfx3:Message_Code>
                            </pfx3:Root>
                        </data>
                    </xsl:when>
                    <xsl:otherwise>
                        <data>
                            <pfx3:Root>
                                <pfx3:Message>
                                    <xsl:value-of select="'Invalid Input'"/>
                                </pfx3:Message>
                                <pfx3:Message_Code>
                                    <xsl:value-of select="'108'"/>
                                </pfx3:Message_Code>
                            </pfx3:Root>
                        </data>
                    </xsl:otherwise>
                </xsl:choose>
            </ns12:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Assign</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>Update_UserProfile</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>CustomFuction:matchRegex($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Firstname,'^[a-zA-Z\s]{1,100}$')and 
string-length($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Firstname)&gt;0 and 
CustomFuction:matchRegex($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Lastname,'^[a-zA-Z\s]{1,100}$') and 
string-length($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Lastname)&gt;0 and 
CustomFuction:matchRegex($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Email,'^[a-z0-9]+@[a-z]+\.[a-z]{2,3}$') and 
string-length($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Email)&gt;0 and 
CustomFuction:matchRegex($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Phone_no,'^[0-9]{10}$') and 
CustomFuction:matchRegex($Parse-JSON/ns:ActivityOutputClass/pfx:User_Registration/pfx:Password,'[A-Za-z0-9]{4,10}')</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Update_UserProfile</pd:from>
        <pd:to>EndLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Assign</pd:from>
        <pd:to>StartLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>StartLog</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>ErrorLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ErrorLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>EndLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>Generate-Error</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>